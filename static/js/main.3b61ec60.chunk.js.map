{"version":3,"sources":["listItems.js","Introduction.js","CovidMap.js","CovidWorldPanel.js","CountryDetails.js","CountryPlot.js","App.js","reportWebVitals.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Introduction","CardHeader","title","subheader","CardContent","Typography","component","variant","React","Component","CovidMap","props","state","isIndividualCountriesDataLoaded","chosenCountry","chooseCountry","bind","this","arguments","fetch","then","response","json","data","fittedData","Countries","map","country","CountryCode","toLowerCase","value","TotalConfirmed","setState","individualCountriesData","error","element","color","size","onClickFunction","message","CovidWorldPanel","isWorldDataLoaded","worldData","now","Date","yesterday","setDate","getDate","date","toISOString","slice","urlWorldCovidData","List","confirmed_diff","toFixed","secondary","deaths_diff","recovered_diff","CountryDetails","isCountryChosen","isCountryLoaded","countryCode","countryName","countryCapital","prevProps","urlCountryData","alpha2Code","name","capital","countryNativeName","nativeName","avatar","Avatar","aria-label","action","IconButton","CardActions","disableSpacing","aria-expanded","Collapse","timeout","unmountOnExit","CountryPlot","latest","earlier","weekAgo","extractedData","elem","index","array","nr","total","Cases","change","length","AreaChart","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","Tooltip","Area","type","stroke","fillOpacity","fill","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeightSmall","fixedHeightBig","App","classes","useState","open","setOpen","fixedHeightPaperSmall","clsx","fixedHeightPaperBig","className","CssBaseline","AppBar","Toolbar","edge","onClick","noWrap","Badge","badgeContent","Drawer","Divider","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b61ec60.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass Introduction extends React.Component {\n\n  render() {\n\n      const elem = (\n        <div>\n        <CardHeader title=\"COVID19 daily dispatch\" subheader=\"Online fleeing attendant\"/>\n        <CardContent>\n          <Typography component=\"p\" variant=\"body2\">\n          Too busy for a pneumonia, huh?\n          </Typography>\n          <Typography component=\"p\" variant=\"caption\">\n          That's a place just for you! Find out the current whereabouts of Covid19 & stay safe!\n          </Typography>\n        </CardContent>\n        </div>\n      );\n      return elem;\n    }\n  }\n\n\nexport default Introduction;\n\n/*\njakiś ładny obrazek ze statystykami dla świata z ikonkami\n*/\n\n\n/*\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Edit <code>src/App.js</code> s your granny a hipertensive diabetic with a faint heart? are you an insomniac due to paranoia about covid? or maybe you simply want to postpone your appointment with the Grim Reaper until further notice for sensible business reasons? or simply you want to party hard this weekend without fearing the looming death? That's a tool just for you! Get your latest info on where covid is subsiding and move there! Updated daily, so you can book a flight or pack your car the same day!\n\n      Dane globalne\n      During a global pandemic it is difficult to find a place unaffected... there are only places less or more affected. Find them here!!.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>*/\n","import React from 'react';\nimport {WorldMap} from 'react-svg-worldmap';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass CovidMap extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIndividualCountriesDataLoaded: false,\n      chosenCountry: null\n    }\n    this.chooseCountry = this.chooseCountry.bind(this);\n  }\n\n  chooseCountry() {\n    this.props.chooseCountry(arguments[2]);\n  }\n\n  componentDidMount () {\n    //fetch last data for all countries\n    const urlAllCountriesCovidData = 'https://api.covid19api.com/summary';\n    fetch(urlAllCountriesCovidData).then((response) => response.json()).then((data) => {\n\n      let rawData = data.Countries;\n      let fittedData = rawData.map(country => ({\n        country: country.CountryCode.toLowerCase(),\n        value: country.TotalConfirmed\n      }));\n      this.setState({\n        isIndividualCountriesDataLoaded: true,\n        individualCountriesData: fittedData\n      });\n    },(error) => {\n      this.setState({\n          isIndividualCountriesDataLoaded: true,\n          error\n      });\n    });\n\n  }\n\n  render() {\n  const {\n    error,\n    isIndividualCountriesDataLoaded,\n    individualCountriesData\n  } = this.state;\n\n  let element = (\n    <div>\n    <CardHeader title=\"Total cases by country\" subheader=\"Worldwide\"/>\n    <CardContent>\n      <WorldMap color=\"blue\" size=\"lg\" data={individualCountriesData} onClickFunction={this.chooseCountry}/>\n    </CardContent>\n    </div>\n  )\n\n  //display countries data\n  if (error) {return <div>Error: {error.message}</div>;}\n  else if (!isIndividualCountriesDataLoaded) {return <div>Loading...</div>;} else\n  {return element;}\n  }\n\n}\n\nexport default CovidMap;\n\n/*\njakiś ładny obrazek ze statystykami dla świata z ikonkami\n*/\n\n\n/*\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Edit <code>src/App.js</code> s your granny a hipertensive diabetic with a faint heart? are you an insomniac due to paranoia about covid? or maybe you simply want to postpone your appointment with the Grim Reaper until further notice for sensible business reasons? or simply you want to party hard this weekend without fearing the looming death? That's a tool just for you! Get your latest info on where covid is subsiding and move there! Updated daily, so you can book a flight or pack your car the same day!\n\n      Dane globalne\n      During a global pandemic it is difficult to find a place unaffected... there are only places less or more affected. Find them here!!.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>*/\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass CovidWorldPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWorldDataLoaded: false,\n      worldData: []\n    }\n  }\n\n  componentDidMount() {\n    //take yesterday's date\n    let now = new Date();\n    let yesterday = new Date(now);\n    yesterday.setDate(yesterday.getDate()-1);\n    this.date = yesterday.toISOString().slice(0,10);\n    // fetch data for the world\n    const urlWorldCovidData = 'https://covid-api.com/api/reports/total?date=' + this.date;\n    fetch(urlWorldCovidData).then((response) => response.json()).then((data) => {\n      this.setState({\n        isWorldDataLoaded: true,\n        worldData: data.data\n      });\n    },(error) => {\n      this.setState({\n          isWorldDataLoaded: true,\n          error\n      });\n    });\n\n  }\n  render() {\n    const {\n      error,\n      isWorldDataLoaded,\n      worldData\n    } = this.state;\n    //display world data\n\n    if (error) {return <div>Error: {error.message}</div>;}\n    else if (!isWorldDataLoaded) {return <div>Loading...</div>;} else\n    {\n      const elem = (\n        <div>\n        <CardHeader title=\"Pandemic today\" subheader=\"Daily update\"/>\n        <CardContent>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n                <AddLocationIcon color=\"primary\"/>\n            </ListItemIcon>\n            <ListItemText primary={(worldData.confirmed_diff/1000).toFixed(1)+'k'} secondary=\"New cases today\"/>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n                <CloudUploadIcon color=\"error\"/>\n            </ListItemIcon>\n            <ListItemText primary={(worldData.deaths_diff/1000).toFixed(1)+'k'} secondary=\"Dead today\"/>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n                <AccessibilityNewIcon color=\"action\"/>\n            </ListItemIcon>\n            <ListItemText primary={(worldData.recovered_diff/1000).toFixed(1)+'k'} secondary=\"Recovered today\"/>\n          </ListItem>\n        </List>\n        </CardContent>\n        </div>\n      );\n      return (elem);\n    }\n  }\n\n}\n\nexport default CovidWorldPanel;\n\n/*\njakiś ładny obrazek ze statystykami dla świata z ikonkami\n*/\n\n\n/*\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Edit <code>src/App.js</code> s your granny a hipertensive diabetic with a faint heart? are you an insomniac due to paranoia about covid? or maybe you simply want to postpone your appointment with the Grim Reaper until further notice for sensible business reasons? or simply you want to party hard this weekend without fearing the looming death? That's a tool just for you! Get your latest info on where covid is subsiding and move there! Updated daily, so you can book a flight or pack your car the same day!\n\n      Dane globalne\n      During a global pandemic it is difficult to find a place unaffected... there are only places less or more affected. Find them here!!.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>*/\n","import React from 'react';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nclass CountryDetails extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isCountryChosen: false,\n      isCountryLoaded: false,\n      countryCode: null,\n      countryName: null,\n      countryCapital: null\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n        if ( (prevProps.country != this.props.country)) {\n          //fetch country data\n          const urlCountryData = 'https://restcountries.eu/rest/v2/alpha/'+this.props.country;\n          fetch(urlCountryData).then((response) => response.json()).then((data) => {\n            this.setState({\n              isCountryChosen: true,\n              isCountryLoaded: true,\n              countryCode: data.alpha2Code,\n              countryName: data.name,\n              countryCapital: data.capital,\n              countryNativeName: data.nativeName\n            });\n          },(error) => {\n            this.setState({\n                isCountryChosen: true,\n                error\n            });\n          });\n        }\n\n    }\n\n  render() {\n\n\n    //fetch country data, update the state and render\n    if (!this.state.isCountryChosen) {\n      return <p>Choose a country on the map!</p>;\n    } else {\n      const element = (\n          <div>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"Country code\">\n                  {this.state.countryCode}\n                </Avatar>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={this.state.countryNativeName}\n              subheader={this.state.countryName}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Capital city: {this.state.countryCapital}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"add to favorites\">\n                <FavoriteIcon />\n              </IconButton>\n              <IconButton aria-label=\"share\">\n                <ShareIcon />\n              </IconButton>\n              <IconButton\n                aria-expanded=\"\"\n                aria-label=\"show more\">\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse timeout=\"auto\" unmountOnExit>\n            </Collapse>\n          </div>);\n          return element;\n    }\n\n  };\n\n};\n\nexport default CountryDetails;\n","import React from 'react';\nimport {AreaChart, XAxis, YAxis, Tooltip, Area} from 'recharts';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass CountryPlot extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isCountryChosen: false,\n      isCountryLoaded: false,\n      data: null\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n        if ( (prevProps.country !== this.props.country)) {\n          //fetch country data for the previous month\n          let now = new Date();\n          let yesterday = new Date(now);\n          yesterday.setDate(yesterday.getDate()-1);\n          let latest = yesterday.toISOString().slice(0,10);\n\n          let earlier = new Date(now);\n          earlier.setDate(earlier.getDate()-15);\n          let weekAgo = earlier.toISOString().slice(0,10);\n\n          const urlCountryData = 'https://api.covid19api.com/country/'+this.props.country+'/status/confirmed?from='+weekAgo+'T00:00:00Z&to='+latest+'T00:00:00Z';\n          fetch(urlCountryData).then((response) => response.json()).then((data) => {\n            let extractedData = data.map((elem, index, array) => ({nr: elem.Date.slice(0,10), total: elem.Cases, change: array[index-1] ? elem.Cases-array[index-1].Cases : null}))\n            this.setState({\n              isCountryChosen: true,\n              isCountryLoaded: true,\n              data: extractedData\n            });\n          },(error) => {\n            this.setState({\n                isCountryChosen: true,\n                data: [],\n                error\n            });\n          });\n        }\n\n    }\n\n  render() {\n\n\n    //fetch country data, update the state and render\n    if (!this.state.isCountryChosen) {\n      return <p>Choose a country on the map first!</p>;\n    } else if (this.state.data.length > 16) {\n      return <p>Dataset is too big! Choose another country!</p>;\n    } else {\n      const element = (\n        <div>\n            <CardHeader title=\"New Covid19 cases\" subheader=\"In previous 2 weeks\"/>\n            <CardContent>\n              <AreaChart width={293} height={100} data={this.state.data} margin={{ top: 10, right: 10, left: 10, bottom: 10 }}>\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                </linearGradient>\n                <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"blue\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"blue\" stopOpacity={0.5}/>\n                </linearGradient>\n              </defs>\n              <XAxis dataKey=\"nr\" />\n              <YAxis />\n              <Tooltip />\n              <Area type=\"monotone\" dataKey=\"change\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n              </AreaChart>\n            </CardContent>\n        </div>);\n          return element;\n    }\n\n  };\n\n};\n\nexport default CountryPlot;\n\n/*\n\n*/\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\n\nimport Introduction from './Introduction';\nimport CovidMap from './CovidMap';\nimport CovidWorldPanel from './CovidWorldPanel';\nimport CountryDetails from './CountryDetails'\nimport CountryPlot from './CountryPlot'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeightSmall: {\n    height: 240,\n  },\n  fixedHeightBig: {\n    height: 550,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n  const fixedHeightPaperBig = clsx(classes.paper, classes.fixedHeightBig);\n\n  // use hook to store a state in this function component\n  const [chosenCountry, chooseCountry] = React.useState(null);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Covid19 updates\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaperSmall}>\n                <Introduction/>\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaperSmall}>\n                <CovidWorldPanel/>\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={7}>\n              <Paper className={classes.paper} className={fixedHeightPaperBig}>\n                <CovidMap chooseCountry={chooseCountry}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={5}>\n              <Paper className={classes.paper} className={fixedHeightPaperBig}>\n                <CountryDetails country={chosenCountry}/>\n                <CountryPlot country={chosenCountry}/>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}